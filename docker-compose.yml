networks:
  app_bridge_net:
    driver: bridge

volumes:
  db_volume:

services:

  db:
    image: 
      postgres:17
    container_name:
      db_postgreSQL
    env_file:
      - ./DB/.env
    volumes:
      - db_volume:/var/lib/postgresql/data/
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql #Файл для первоначальной инициализации
    networks:
      - app_bridge_net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  backup:
    build: ./backup
    container_name: db_backup
    env_file:
      - ./DB/.env
    environment:
      - PGHOST=db
      - PGDATABASE=admin
    volumes:
      - ./backup/files/:/backups
    networks:
      - app_bridge_net
    restart: always
    depends_on:
      db:
        condition: service_healthy


  # api:
  #   image: python:3.10-alpine
  #   container_name: api
  #   ports:                 ###УДАЛИ ОТКРЫТЫЕ ПОРТЫ ПОСЛЕ ТЕСТОВ
  #     - "15000:15000"      ###УДАЛИ ОТКРЫТЫЕ ПОРТЫ ПОСЛЕ ТЕСТОВ
  #   networks:
  #     - app_bridge_net
  #   restart: always
  #   depends_on:
  #     - db


  # bot:
  #   image: python:3.10-alpine
  #   container_name: tg_message_bot
  #   ports:                ###УДАЛИ ОТКРЫТЫЕ ПОРТЫ ПОСЛЕ ТЕСТОВ
  #     - "15001:15001"     ###УДАЛИ ОТКРЫТЫЕ ПОРТЫ ПОСЛЕ ТЕСТОВ
  #   networks:
  #     - app_bridge_net
  #   restart: always
  #   depends_on:
  #     - api


  # nginx:
  #   image: nginx:stable-alpine
  #   container_name: nginx_server
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/ssl/private:ro
  #     - ./nginx/ssl:/etc/ssl/certs:ro
  #     - ./front/build:/var/www/html:ro
  #   networks:
  #     - app_bridge_net
  #   depends_on:
  #     - api
  #   restart: always


  pgadmin:
    image:
      dpage/pgadmin4:latest  
    container_name:
      pgAdmin
    env_file:
      - ./pgAdmin/.env
    volumes:
      - ./pgAdmin/server.json:/pgadmin4/servers.json
    ports:
      - "8899:80"
    networks:
      - app_bridge_net
    restart: always
    depends_on:
      db:
        condition: service_healthy